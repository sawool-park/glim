요구사항
- 세 번째 클릭 이후에 클릭 지점 3개를 모두 지나가는 정원 1개를 그립니다.
- 클릭 지점 원을 그릴 때의 반지름 크기는 사용자로부터 입력 받습니다.
- 각 클릭 지점 원의 중심 좌표를 UI에 표시합니다.
- 네 번째 클릭부터는 클릭 지점 원을 그리지 않습니다.
- 세 클릭 지점을 지나가는 정원의 내부는 채워지지 않아야 하며, 가장자리 두께는 사용자로부터 입력 받습니다.
- 클릭 지점 3개 중 하나를 클릭하고 드래그 했을 때 정원을 다시 그립니다.
- 이 때, 마우스 커서 좌표가 바뀌는 동안 즉, 마우스 드래그 상태가 끝날 때 까지 정원이 계속해서 이동하며 그려져야 합니다.
- [초기화] 버튼을 누르면 그려졌던 모든 내용들을 삭제하고 처음부터 입력 받을 수 있는 상태가 되어야 합니다.
- 정원이 그려진 상태에서 [랜덤 이동] 버튼을 누르면 3개의 클릭 지점 원 모두를 랜덤한 위치로 이동시킵니다.
- 이 때, 정원 또한 마찬가지로 다시 그려져야 합니다.
- 랜덤한 위치로 이동 및 정원 그리기 동작을 초당 2회, 총 10번 자동으로 반복하되 메인UI가 프리징 상태가 되지 않도록 별도 쓰레드로 구현해야 합니다.
- MFC Dialog 기반 프로젝트로 작성해야 합니다.
- 클릭 지점 원과 정원을 그릴 때 CDC 클래스를 사용하면 안됩니다.

프로그램 설계
- 플리커링 방지위해 CImage로 더블버퍼링을 구현한다.
- 백그라운드 스레드를 두어 영상처리를 담당한다.
- 랜덤 위치 이동 포함 동작 스케줄링 시나리오는 Timer 사용하여 백그라운드에 요청 메시지를 전송한다. 
- GUI와 백그라운드 스레드는 MFC 윈도우 메시지기반 비동기 통신한다.
- 필요 시, Event와 WaitForSingleObject 사용하여 순서 제어와 결과 확인한다.
- 채워진 작은원 3개는 Radius 지정 후 화면 클릭 시, 자동으로 최대 3개까지 생성되며 두께 조절이 가능한 비워진 정원(큰 원) 1개가 생성된다.
- 정원은 작은 원 3개의 중심점을 지나는 외접원이다.
- 작은 원은 Radius를 달리할 수 있으며 생성 후 메모리에 캐싱되어 재사용되며 Composition 위한 부가 정보를 갖는다.
- 기능은 요구사항의 조건을 모두 만족해야 한다.
- 작은 원을 마우스 드래그에 따라 정원이 계속 이동할 때, 
  순간적으로 빠른 마우스 이동으로 많은 Redraw 이벤트가 발생하여 프로그램 제어 원활치 않고 시스템 부하를 증가됨을 완화시켜야 한다.
  * 마우스 이벤트 따른 Redraw 이벤트를 제어하되, 초당 200회로 매끄러운 렌더링를 보장한다.
- 그려진 영역에 대한 Bounding Rectangle 구하여 메모리 지움 영역을 최적화한다.
- 드래그되는 원의 중심점 정보가 표시되며 이동 방향 및 영역에 따라 가림이 없도록 화면의 중앙점을 기준으로 자동 조정한다.
